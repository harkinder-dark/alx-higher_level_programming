the ''2-matrix_divided'' module
=================================


Using ''matrix_divided''
------------------------

    Importation
        >>> matrix_divided = __import__("2-matrix_divided").matrix_divided

    Module doc
        >>> mod = __import__("2-matrix_divided").__doc__
        >>> len(mod) > 1
        True

    Function doc
        >>> func = __import__("2-matrix_divided").matrix_divided.__doc__
        >>> len(func) > 1
        True

    test

        matrix correct entry

            div correct entry
                >>> matrix_divided([[0, 1], [2, 3]], 1)
                [[0.0, 1.0], [2.0, 3.0]]

                >>> matrix_divided([[0, 1], [2, 3]], 2)
                [[0.0, 0.5], [1.0, 1.5]]

                >>> matrix_divided([[0, -8], [-2, 7]], 3)
                [[0.0, -2.67], [-0.67, 2.33]]

                >>> matrix_divided([[0.85, 107], [20, -330.15]], -10.7)
                [[-0.08, -10.0], [-1.87, 30.86]]

                >>> matrix_divided([[0], [1]], 2)
                [[0.0], [0.5]]

            div incorret entry
                >>> matrix_divided([[0, 1], [2, 3]], 0)
                Traceback (most recent call last):
                    ...
                ZeroDivisionError: division by zero

                >>> matrix_divided([[0, 1], [2, 3]], "choice")
                Traceback (most recent call last):
                    ...
                TypeError: div must be a number

                >>> matrix_divided([[0, 1], [2, 3]], [17, -88])
                Traceback (most recent call last):
                    ...
                TypeError: div must be a number

                >>> matrix_divided([[0, 1], [2, 3]], {"most": 3.85})
                Traceback (most recent call last):
                    ...
                TypeError: div must be a number

        matrix incoorect entry

            div correct entry
                >>> matrix_divided([1, 5, 8], 8)
                Traceback (most recent call last):
                    ...
                TypeError: matrix must be a matrix (list of lists) of integers/floats

                >>> matrix_divided([[4, 8, 12], [1], [4.1, 3]], 5)
                Traceback (most recent call last):
                    ...
                TypeError: Each row of the matrix must have the same size

                >>> matrix_divided(["kd", 7, {"h": 6}], 12)
                Traceback (most recent call last):
                    ...
                TypeError: matrix must be a matrix (list of lists) of integers/floats

                >>> matrix_divided([[7, 12], [{4.7, 7}, 8.6]], 17)
                Traceback (most recent call last):
                    ...
                TypeError: matrix must be a matrix (list of lists) of integers/floats

                >>> matrix_divided([[[0.7, 3], [14, 1]], 4, ["jadis", {4, 0, 58}]], 1)
                Traceback (most recent call last):
                    ...
                TypeError: matrix must be a matrix (list of lists) of integers/floats

                >>> matrix_divided([[44, -12.0], [-37, 100, 0], ["irie", 4]], 5)
                Traceback (most recent call last):
                    ...
                TypeError: Each row of the matrix must have the same size

            div incorrect entry 
                >>> matrix_divided([1, 5, 8], 0)
                Traceback (most recent call last):
                    ...
                TypeError: matrix must be a matrix (list of lists) of integers/floats

                >>> matrix_divided([[4, 8, 12], [1], [4.1, 3]], "4")
                Traceback (most recent call last):
                    ...
                TypeError: Each row of the matrix must have the same size

                >>> matrix_divided([[7, 12], [{4.7, 7}, 8.6]], [4, 0])
                Traceback (most recent call last):
                    ...
                TypeError: matrix must be a matrix (list of lists) of integers/floats
