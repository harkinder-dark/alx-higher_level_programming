7. Change representation
mandatory
Écrivez une classe Rectangle qui définit un rectangle par : (basé sur 6-rectangle.py)

Attribut de classe publique print_symbol :
Initialisé à #
Utilisé comme symbole pour la représentation sous forme de chaîne
Peut être n'importe quel type


Write a class Rectangle that defines a rectangle by: (based on 6-rectangle.py)

Public class attribute print_symbol:
Initialized to #
Used as symbol for string representation
Can be any type

guillaume@ubuntu:~/0x08$ cat 7-main.py
#!/usr/bin/python3
Rectangle = __import__('7-rectangle').Rectangle

my_rectangle_1 = Rectangle(8, 4)
print(my_rectangle_1)
print("--")
my_rectangle_1.print_symbol = "&"
print(my_rectangle_1)
print("--")

my_rectangle_2 = Rectangle(2, 1)
print(my_rectangle_2)
print("--")
Rectangle.print_symbol = "C"
print(my_rectangle_2)
print("--")

my_rectangle_3 = Rectangle(7, 3)
print(my_rectangle_3)

print("--")

my_rectangle_3.print_symbol = ["C", "is", "fun!"]
print(my_rectangle_3)

print("--")

guillaume@ubuntu:~/0x08$ ./7-main.py
########
########
########
########
--
&&&&&&&&
&&&&&&&&
&&&&&&&&
&&&&&&&&
--
##
--
CC
--
CCCCCCC
CCCCCCC
CCCCCCC
--
['C', 'is', 'fun!']['C', 'is', 'fun!']['C', 'is', 'fun!']['C', 'is', 'fun!']
['C', 'is', 'fun!']['C', 'is', 'fun!']['C', 'is', 'fun!']
['C', 'is', 'fun!']['C', 'is', 'fun!']['C', 'is', 'fun!']['C', 'is', 'fun!']
['C', 'is', 'fun!']['C', 'is', 'fun!']['C', 'is', 'fun!']
['C', 'is', 'fun!']['C', 'is', 'fun!']['C', 'is', 'fun!']['C', 'is', 'fun!']
['C', 'is', 'fun!']['C', 'is', 'fun!']['C', 'is', 'fun!']
--
Bye rectangle...
Bye rectangle...
Bye rectangle...
guillaume@ubuntu:~/0x08$ 
No test cases needed

Repo:

GitHub repository: alx-higher_level_programming
Directory: 0x08-python-more_classes
File: 7-rectangle.py
//////////////////////////////////////////////////////////////////////////////////
10. N queens
#advanced

Le grand maître d'échecs Judit Polgár , la joueuse d'échecs 
la plus forte de tous les temps


Le puzzle N reines est le défi de placer N
dames non attaquantes sur un échiquier N×N. Écrire un programme qui résout le N
problème des reines.

Utilisation: nreines N
Si l'utilisateur a appelé le programme avec le mauvais nombre d'arguments,
print Utilisation : nqueens N, suivi d'une nouvelle ligne, et sortie avec le statut 1
où N doit être un entier supérieur ou égal à 4
Si N n'est pas un entier, print N doit être un nombre,
suivi d'une nouvelle ligne, et sortie avec le statut 1
Si N est inférieur à 4, imprimer N doit être au moins égal à 4,
suivi d'une nouvelle ligne, et sortie avec le statut 1
Le programme devrait imprimer toutes les solutions possibles au problème
Une solution par ligne
Format : voir exemple
Vous n'êtes pas obligé d'imprimer les solutions dans un ordre spécifique
Vous n'êtes autorisé à importer que le module sys



Chess grandmaster Judit Polgár, the strongest female chess player of all time


The N queens puzzle is the challenge of placing N 
non-attacking queens on an N×N chessboard. Write a program that solves the N 
queens problem.

Usage: nqueens N
If the user called the program with the wrong number of arguments, 
print Usage: nqueens N, followed by a new line, and exit with the status 1
where N must be an integer greater or equal to 4
If N is not an integer, print N must be a number, 
followed by a new line, and exit with the status 1
If N is smaller than 4, print N must be at least 4, 
followed by a new line, and exit with the status 1
The program should print every possible solution to the problem
One solution per line
Format: see example
You don’t have to print the solutions in a specific order
You are only allowed to import the sys module
Read: Queen, Backtracking

julien@ubuntu:~/0x08. N Queens$ ./101-nqueens.py 4
[[0, 1], [1, 3], [2, 0], [3, 2]]
[[0, 2], [1, 0], [2, 3], [3, 1]]
julien@ubuntu:~/0x08. N Queens$ ./101-nqueens.py 6
[[0, 1], [1, 3], [2, 5], [3, 0], [4, 2], [5, 4]]
[[0, 2], [1, 5], [2, 1], [3, 4], [4, 0], [5, 3]]
[[0, 3], [1, 0], [2, 4], [3, 1], [4, 5], [5, 2]]
[[0, 4], [1, 2], [2, 0], [3, 5], [4, 3], [5, 1]]
julien@ubuntu:~/0x08. N Queens$ 
Repo:

GitHub repository: alx-higher_level_programming
Directory: 0x08-python-more_classes
File: 101-nqueens.py
